{"version":3,"sources":["pages/MainPage.js","pages/CategoryPage.js","App.js","reportWebVitals.js","index.js"],"names":["MainPage","state","categories","a","axios","get","request","this","setState","data","MainDiv","Title","CategoriesDiv","map","category","style","textDecoration","to","Card","Component","styled","div","h3","CategoryPage","object","newJoke","e","preventDefault","props","match","params","name","console","log","src","icon_url","alt","value","Button","inputColor","onClick","withRouter","button","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAwCeA,E,4MAlCbC,MAAQ,CACNC,WAAY,I,8FAGd,4BAAAC,EAAA,sEAEwBC,IAAMC,IAC1B,+CAHJ,OAEQC,EAFR,OAKEC,KAAKC,SAAS,CAAEN,WAAYI,EAAQG,OALtC,gD,0EAQA,WACE,IAAQP,EAAeK,KAAKN,MAApBC,WACR,OACE,eAACQ,EAAD,WACE,cAACC,EAAD,+BACA,cAACC,EAAD,UACGV,EAAWW,KAAI,SAACC,GAAD,OACd,cAAC,IAAD,CACEC,MAAO,CAAEC,eAAgB,QACzBC,GAAE,oBAAeH,GAFnB,SAIE,cAACI,EAAD,UACE,4BAAIJ,oB,GAzBGK,aAqCjBT,EAAUU,IAAOC,IAAV,sLAUPV,EAAQS,IAAOE,GAAV,oEAKLV,EAAgBQ,IAAOC,IAAV,iJAQbH,EAAOE,IAAOC,IAAV,qSC5DJE,E,4MACJtB,MAAQ,CACNuB,OAAQ,I,EAaVC,Q,uCAAU,WAAOC,GAAP,iBAAAvB,EAAA,6DACRuB,EAAEC,iBACEb,EAAW,EAAKc,MAAMC,MAAMC,OAAOC,KAF/B,SAIc3B,IAAMC,IAAN,2DACgCS,IAL9C,OAIFR,EAJE,OAOR,EAAKE,SAAS,CAAEgB,OAAQlB,EAAQG,OAPxB,2C,oJAVV,8BAAAN,EAAA,6DACMW,EAAWP,KAAKqB,MAAMC,MAAMC,OAAOC,KADzC,SAGwB3B,IAAMC,IAAN,2DACgCS,IAJxD,OAGQR,EAHR,OAMEC,KAAKC,SAAS,CAAEgB,OAAQlB,EAAQG,OAChCuB,QAAQC,IAAI3B,GAPd,gD,0EAoBA,WACE,IAAQkB,EAAWjB,KAAKN,MAAhBuB,OACR,OACE,eAAC,EAAD,WACE,qBAAKU,IAAKV,EAAOW,SAAUC,IAAI,KAC/B,4BAAIZ,EAAOa,QAAW,IACtB,gCACG,IACD,cAAC,IAAD,CAAMjB,OAAQ,CAAEJ,eAAgB,QAAUC,GAAI,IAA9C,SACE,cAACqB,EAAD,CAAQC,WAAW,UAAnB,4BAEF,cAACD,EAAD,CAAQE,QAASjC,KAAKkB,QAAtB,mC,GApCiBN,aA2CZsB,cAAWlB,GAEpBb,EAAUU,IAAOC,IAAV,qeA6BPiB,EAASlB,IAAOsB,OAAV,4SAMU,SAACd,GAAD,OAAWA,EAAMW,YAAc,mBCtEtCI,MATf,WACE,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW9C,IACjC,cAAC,IAAD,CAAO6C,KAAK,kBAAkBC,UAAWvB,QCEhCwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.921b7c16.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass MainPage extends Component {\r\n  state = {\r\n    categories: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    // fetching the categories from the API\r\n    const request = await axios.get(\r\n      \"https://api.chucknorris.io/jokes/categories\"\r\n    );\r\n    this.setState({ categories: request.data });\r\n  }\r\n\r\n  render() {\r\n    const { categories } = this.state;\r\n    return (\r\n      <MainDiv>\r\n        <Title>Jokes Categories</Title>\r\n        <CategoriesDiv>\r\n          {categories.map((category) => (\r\n            <Link\r\n              style={{ textDecoration: \"none\" }}\r\n              to={`/category/${category}`}\r\n            >\r\n              <Card>\r\n                <p>{category}</p>\r\n              </Card>\r\n            </Link>\r\n          ))}\r\n        </CategoriesDiv>\r\n      </MainDiv>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainPage;\r\n\r\nconst MainDiv = styled.div`\r\n  padding: 3em;\r\n  background-color: wheat;\r\n  height: 90vh;\r\n  display: flex;\r\n  flex-flow: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 2em;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst CategoriesDiv = styled.div`\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  height: 70vh;\r\n`;\r\n\r\nconst Card = styled.div`\r\n  height: 7em;\r\n  width: 7em;\r\n  background-color: blue;\r\n  margin: 0.5em;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border: none;\r\n  color: white;\r\n  border-radius: 5px;\r\n\r\n  > p {\r\n    font-size: 1.2em;\r\n    font-weight: 600;\r\n  }\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nclass CategoryPage extends Component {\r\n  state = {\r\n    object: {},\r\n  };\r\n\r\n  async componentDidMount() {\r\n    var category = this.props.match.params.name;\r\n    // fetching the categories from the API\r\n    const request = await axios.get(\r\n      `https://api.chucknorris.io/jokes/random?category=${category}`\r\n    );\r\n    this.setState({ object: request.data });\r\n    console.log(request);\r\n  }\r\n\r\n  newJoke = async (e) => {\r\n    e.preventDefault();\r\n    var category = this.props.match.params.name;\r\n    // fetching the categories from the API\r\n    const request = await axios.get(\r\n      `https://api.chucknorris.io/jokes/random?category=${category}`\r\n    );\r\n    this.setState({ object: request.data });\r\n  };\r\n\r\n  render() {\r\n    const { object } = this.state;\r\n    return (\r\n      <MainDiv>\r\n        <img src={object.icon_url} alt=\"\" />\r\n        <p>{object.value}</p>{\" \"}\r\n        <div>\r\n          {\" \"}\r\n          <Link styled={{ textDecoration: \"none\" }} to={\"/\"}>\r\n            <Button inputColor=\"#555ea6\">Take me home</Button>\r\n          </Link>\r\n          <Button onClick={this.newJoke}>Another One</Button>\r\n        </div>\r\n      </MainDiv>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(CategoryPage);\r\n\r\nconst MainDiv = styled.div`\r\n  padding: 0 3em 0 3em;\r\n  display: flex;\r\n  flex-flow: column wrap;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: wheat;\r\n  height: 100vh;\r\n\r\n  > img {\r\n    height: 5em;\r\n    width: 5em;\r\n  }\r\n\r\n  > p {\r\n    margin-top: 2em;\r\n    text-align: center;\r\n    font-size: 1.3em;\r\n    line-height: 1.5;\r\n  }\r\n\r\n  > div {\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  height: 3em;\r\n  padding: 0.5em;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: ${(props) => props.inputColor || \"palevioletred\"};\r\n  border: none;\r\n  border-radius: 5px;\r\n  color: white;\r\n  font-size: 0.9em;\r\n  margin-top: 2em;\r\n  margin-left: 0.3em;\r\n  cursor: pointer;\r\n`;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport MainPage from \"./pages/MainPage\";\nimport CategoryPage from \"./pages/CategoryPage\";\n\nfunction App() {\n  return (\n    <Router>\n      <Route exact path=\"/\" component={MainPage} />\n      <Route path=\"/category/:name\" component={CategoryPage} />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}